<?xml version="1.0" encoding="UTF-8"?>
<operators>
    <!-- conway operator -->
    <operator char="a" function="ambo" params="" vef="e,2e,2+e"/>
    <operator char="b" function="bevel" params="" vef="4e,6e,e2+2" equivalent="ta" description=""/>
    <operator char="c" function="chamfer" params="r=0.333" vef="v+2e,4e,f+e" description="Edge truncation - every edge is replaced by a hexagon"/>
    <operator char="d" function="dual" params="" vef="f,e,v"/>
    <operator char="e" function="expand" params="h=0.5" vef="2e,4e,2e+2" equivalent="aa"/>
    <operator char="f"/>
    <operator char="g" function="gyro" params="h=0.2,r=0.3333" vef="3e+2,5e,2e" description="each N-face is divided into N pentagons composed of a vertex, two edge points and the centroid"/>
    <operator char="h"/>
    <operator char="i" function="inset_kis" params="fn=[],r=0.5,h=0.1" description="like kis but inset from the edge by ratio r "/>
    <operator char="j" function="join" params="" equivalent="aa" vef="e+2,2e,e" description=""/>
    <operator char="k" function="kis" params="fn=[],h=0.1,regular=false" vef="e+2,3e,2e" description="each N-face is divided into N triangles which extend to the face centroid moved normal to the face by h"/>
    <operator char="l"/>
    <operator char="m" function="meta" params="h=0.1" vef="2e+2,6e,4e" equivalent="db" description=""/>
    <operator char="n"/>
    <operator char="o" function="ortho" equivalent="de" vef="2e+2,4e,2e" params="h=0.2"/>
    <operator char="p" function="propellor" params="r=0.333" vef="v+2e,4e,f+e" description="a face rotation that creates N quadrilaterals at an N-vertex"/>
    <operator char="q" description="quinta not yet implemented"/>
    <operator char="r" function="reflect" params="" vef="v,e,f" description="mirror image vertices for chiral forms"/>
    <operator char="s" function="snub" params="h=0.5" vef="2e,5e,3e+2" description="'expand and twist' - each vertex replaced by a face and each edge creates 2 triangles "/>
    <operator char="t" function="trunc" params="fn=[],r=0.25" vef="2e,3e,e+2" description="truncate selected vertices - r determines the point of truncation. Each N-face becomes an N-face, each N-vertex an N-face"/>
    <operator char="u" function="pt" description="tri-triangulate pentagonal faces ? whats this for?"/>
    <operator char="v" function="tt" description="quad triangulate triangular faces "/>
    <operator char="w" function="whirl" params="h=0.2,r=0.3333" vef="v+4e,7e,f+2e" description="each edge becomes 2 hexagons"/>
    <operator char="x" function="qt" description="bi-triangulate quadrilayeral faces"/>
    <operator char="y" function="pyra" params="h=0.1" description="added by KW - like inset-kis "/>
    <operator char="z"/>
    
    <!-- general operations -->
    <operator char="L" function="shell" params="" description="Leonardo's open face form"/>
    <operator char="F" function="place" params="" description="place on largest face"/>
    <operator char="M" function="modulate" params="" description="modulate the vertex positions with spherical function fmod(r,theta,phi)"/>
    <operator char="N" function="canon" params="n=10" description="George Hart's full canonicalisation"/>
    <operator char="K" function="plane" params="n=10" description="George Hart's simple canonicalisation"/>
    <operator char="S" function="rcc" params="n=1" description="apply the Catmull-Clark smoothing operation recursively to a depth of n"/>
    <operator char="R" function="random" params="o=0.1" description="perturb each vertice by a random vector scaled by parameter o"/>
    <operator char="X" function="skew" params="alpha=0,beta=0" description="skew vertices by alpha in Z-X plane and beta in Z-Y plane (i think)"/>
    <operator char="V" function="invert" params="" description="invert vertices"/>
    
    <!-- primitives  -->
    <operator char="T" function="T" params="" description="Tetrahedron"/>
    <operator char="C" function="C" params="" description="Cube"/>
    <operator char="O" function="O" params="" description="Octahedron"/>
    <operator char="D" function="D" params="" description="Dodecahedron"/>
    <operator char="I" function="I" params="" description="Icosahedron"/>
    <operator char="A" function="A" params="n,h=1" description="Antiprism"/>
    <operator char="Y" function="Y" params="n,h=1" description="Pyramid"/>
    <operator char="P" function="P" params="n,h=1" description="Prism"/>
    <operator char="Z" function="Z" params="" description="Use the polyhedron defined by coordinates"/>
</operators>
